{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "ignorePatterns": ["projects/**/*"],
  "plugins": [
    "@typescript-eslint"
  ],
  "rules":{
     // 1. Usar comillas simples
     "quotes": ["warn", "single", { "avoidEscape": true, "allowTemplateLiterals": true }],
    
     // 2. Punto y coma obligatorio
     "semi": ["error", "always"],
     
     // 3. No permitir `any`
     "@typescript-eslint/no-explicit-any": "error",
     
     // 4. Añadir llaves en sentencias condicionales y bucles
     "curly": ["error", "all"],
 
     // 5. No permitir interfaces vacías
     "@typescript-eslint/no-empty-interface": "error",
     
     // 5. Evitar bloques vacíos en general
     "no-empty": ["error", { "allowEmptyCatch": true }]
  },
  "overrides": [
    {
      "files": ["*.ts"],
      
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@typescript-eslint/no-unused-vars": "error",
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": ["Page", "Component"]
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
