name: 🚀 Build Android APK

on:
  push:
    branches:
      - 'feature/**'
      - 'fix/**'
      - 'hotfix/**'
      - 'develop'
      - 'test'
      - 'main'
  pull_request:
    branches:
      - 'develop'
      - 'main'

# Variables de entorno globales
env:
  AMPLIFY_APP_ID: d2l8hh51bqhq16
  JAVA_VERSION: '17'
  NODE_VERSION: '20'

jobs:
  build:
    name: 📱 Build APK
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: 33.0.0
          ndk-version: 23.1.7779620

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 📦 Install dependencies
        run: |
          npm ci
          npm install -g @aws-amplify/cli @ionic/cli @capacitor/cli

      - name: 🌍 Determine Amplify environment
        id: amplify-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "env_name=main" >> $GITHUB_OUTPUT
            echo "🎯 Using MAIN environment for production"
          elif [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
            echo "env_name=test" >> $GITHUB_OUTPUT
            echo "🧪 Using TEST environment for testing"
          else
            echo "env_name=develop" >> $GITHUB_OUTPUT
            echo "🚧 Using DEVELOP environment for development"
          fi

      - name: 🔄 Configure Amplify
        run: |
          # Configurar Amplify sin interacción
          amplify configure --usage-data-off

          # Descargar configuración del backend usando appId y environment
          amplify pull --appId ${{ env.AMPLIFY_APP_ID }} --envName ${{ steps.amplify-env.outputs.env_name }} --yes

          echo "✅ Amplify configurado para ambiente: ${{ steps.amplify-env.outputs.env_name }}"

      - name: 🏗️ Build web application
        run: |
          echo "🔨 Building web application..."
          npm run build
          echo "✅ Web build completed"

      - name: 📱 Setup Android platform
        run: |
          echo "🔧 Setting up Android platform..."

          # Sincronizar Capacitor
          npx cap sync android

          # Generar assets si es necesario
          npx @capacitor/assets generate --android || true

          # Dar permisos de ejecución al gradlew
          chmod +x android/gradlew

          echo "✅ Android platform configured"

      - name: 🔨 Build Android APK
        run: |
          echo "📱 Building Android APK..."

          cd android

          # Compilar APK de debug (más rápido para CI)
          ./gradlew assembleDebug --no-daemon --stacktrace

          # Compilar APK de release para branches principales
          if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
            echo "🚀 Building release APK for ${{ github.ref }}"
            ./gradlew assembleRelease --no-daemon --stacktrace
          fi

          cd ..

          echo "✅ APK build completed"

      - name: 📄 List generated APKs
        run: |
          echo "📋 Generated APK files:"
          find android/app/build/outputs/apk -name "*.apk" -type f | while read apk; do
            size=$(du -h "$apk" | cut -f1)
            echo "  📄 $apk ($size)"
          done

      - name: 🏷️ Generate artifact names
        id: artifact-names
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_NAME=${BRANCH_NAME//\//-}  # Reemplazar / con -
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)

          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "apk_name=UVA-APK-${BRANCH_NAME}-${TIMESTAMP}" >> $GITHUB_OUTPUT

      - name: 📦 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact-names.outputs.apk_name }}-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: 📦 Upload Release APK
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact-names.outputs.apk_name }}-release
          path: android/app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 90

      - name: 📊 Build summary
        run: |
          echo "## 🚀 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Amplify Environment**: ${{ steps.amplify-env.outputs.env_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Node Version**: ${{ env.NODE_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Java Version**: ${{ env.JAVA_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📱 Generated APKs" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f "android/app/build/outputs/apk/debug/app-debug.apk" ]; then
            DEBUG_SIZE=$(du -h android/app/build/outputs/apk/debug/app-debug.apk | cut -f1)
            echo "- ✅ **Debug APK**: $DEBUG_SIZE" >> $GITHUB_STEP_SUMMARY
          fi

          if [ -f "android/app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            RELEASE_SIZE=$(du -h android/app/build/outputs/apk/release/app-release-unsigned.apk | cut -f1)
            echo "- ✅ **Release APK**: $RELEASE_SIZE" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Environment Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **App ID**: ${{ env.AMPLIFY_APP_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend**: ${{ steps.amplify-env.outputs.env_name }}" >> $GITHUB_STEP_SUMMARY

  # Job adicional para notificar el estado del build
  notify:
    name: 📢 Notify Build Status
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
      - name: 📢 Build Status
        run: |
          if [ "${{ needs.build.result }}" == "success" ]; then
            echo "✅ Build completed successfully!"
            echo "🎉 APK artifacts are available for download"
          else
            echo "❌ Build failed!"
            echo "🔍 Check the build logs for details"
            exit 1
          fi
